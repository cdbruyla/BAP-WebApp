{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\GitHub\\\\Private\\\\Angular_WebApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { credentialLogger, formatError } from \"../../util/logging\";\nconst BrowserNotSupportedError = new Error(\"ManagedIdentityCredential is not supported in the browser.\");\nconst logger = credentialLogger(\"ManagedIdentityCredential\");\nexport class ManagedIdentityCredential {\n  constructor() {\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n\n  getToken() {\n    return _asyncToGenerator(function* () {\n      logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n      throw BrowserNotSupportedError;\n    })();\n  }\n\n}","map":{"version":3,"sources":["C:/GitHub/Private/Angular_WebApp/node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/index.browser.js"],"names":["credentialLogger","formatError","BrowserNotSupportedError","Error","logger","ManagedIdentityCredential","constructor","info","getToken"],"mappings":";AAAA;AACA;AACA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,oBAA9C;AACA,MAAMC,wBAAwB,GAAG,IAAIC,KAAJ,CAAU,4DAAV,CAAjC;AACA,MAAMC,MAAM,GAAGJ,gBAAgB,CAAC,2BAAD,CAA/B;AACA,OAAO,MAAMK,yBAAN,CAAgC;AACnCC,EAAAA,WAAW,GAAG;AACVF,IAAAA,MAAM,CAACG,IAAP,CAAYN,WAAW,CAAC,EAAD,EAAKC,wBAAL,CAAvB;AACA,UAAMA,wBAAN;AACH;;AACKM,EAAAA,QAAQ,GAAG;AAAA;AACbJ,MAAAA,MAAM,CAACI,QAAP,CAAgBD,IAAhB,CAAqBN,WAAW,CAAC,EAAD,EAAKC,wBAAL,CAAhC;AACA,YAAMA,wBAAN;AAFa;AAGhB;;AARkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { credentialLogger, formatError } from \"../../util/logging\";\nconst BrowserNotSupportedError = new Error(\"ManagedIdentityCredential is not supported in the browser.\");\nconst logger = credentialLogger(\"ManagedIdentityCredential\");\nexport class ManagedIdentityCredential {\n    constructor() {\n        logger.info(formatError(\"\", BrowserNotSupportedError));\n        throw BrowserNotSupportedError;\n    }\n    async getToken() {\n        logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n        throw BrowserNotSupportedError;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}