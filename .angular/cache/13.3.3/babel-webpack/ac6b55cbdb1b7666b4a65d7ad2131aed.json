{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\GitHub\\\\Private\\\\Angular_WebApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { logger as coreLogger } from \"../log\";\nimport { Sanitizer } from \"../util/sanitizer\";\n/**\n * The programmatic identifier of the logPolicy.\n */\n\nexport const logPolicyName = \"logPolicy\";\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\n\nexport function logPolicy(options = {}) {\n  var _a;\n\n  const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : coreLogger.info;\n  const sanitizer = new Sanitizer({\n    additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters\n  });\n  return {\n    name: logPolicyName,\n\n    sendRequest(request, next) {\n      return _asyncToGenerator(function* () {\n        if (!logger.enabled) {\n          return next(request);\n        }\n\n        logger(`Request: ${sanitizer.sanitize(request)}`);\n        const response = yield next(request);\n        logger(`Response status code: ${response.status}`);\n        logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n        return response;\n      })();\n    }\n\n  };\n} //# sourceMappingURL=logPolicy.js.map","map":null,"metadata":{},"sourceType":"module"}