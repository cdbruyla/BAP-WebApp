{"ast":null,"code":"/*! @azure/msal-browser v2.23.0 2022-04-04 */\n'use strict';\n\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { OIDC_DEFAULT_SCOPES, AuthError, ThrottlingUtils, Constants, UrlString } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.js';\nimport { PopupUtils } from '../utils/PopupUtils.js';\nimport { EventType } from '../event/EventType.js';\nimport { InteractionType, ApiId } from '../utils/BrowserConstants.js';\nimport { PopupHandler } from '../interaction_handler/PopupHandler.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar PopupClient =\n/** @class */\nfunction (_super) {\n  __extends(PopupClient, _super);\n\n  function PopupClient() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n   * @param request\r\n   */\n\n\n  PopupClient.prototype.acquireToken = function (request) {\n    try {\n      var popupName = PopupUtils.generatePopupName(this.config.auth.clientId, request.scopes || OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority, this.correlationId);\n      var popupWindowAttributes = request.popupWindowAttributes || {}; // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n\n      if (this.config.system.asyncPopups) {\n        this.logger.verbose(\"asyncPopups set to true, acquiring token\"); // Passes on popup position and dimensions if in request\n\n        return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes);\n      } else {\n        // asyncPopups flag is set to false. Opens popup before acquiring token.\n        this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\n        var popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\n        return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  /**\r\n   * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n   * @param logoutRequest\r\n   */\n\n\n  PopupClient.prototype.logout = function (logoutRequest) {\n    try {\n      this.logger.verbose(\"logoutPopup called\");\n      var validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n      var popupName = PopupUtils.generateLogoutPopupName(this.config.auth.clientId, validLogoutRequest);\n      var authority = logoutRequest && logoutRequest.authority;\n      var mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\n      var popupWindowAttributes = (logoutRequest === null || logoutRequest === void 0 ? void 0 : logoutRequest.popupWindowAttributes) || {}; // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n\n      if (this.config.system.asyncPopups) {\n        this.logger.verbose(\"asyncPopups set to true\"); // Passes on popup position and dimensions if in request\n\n        return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\n      } else {\n        // asyncPopups flag is set to false. Opens popup before logging out.\n        this.logger.verbose(\"asyncPopup set to false, opening popup\");\n        var popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\n        return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\n      }\n    } catch (e) {\n      // Since this function is synchronous we need to reject\n      return Promise.reject(e);\n    }\n  };\n  /**\r\n   * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n   * @param validRequest\r\n   * @param popupName\r\n   * @param popup\r\n   * @param popupWindowAttributes\r\n   *\r\n   * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n   */\n\n\n  PopupClient.prototype.acquireTokenPopupAsync = function (request, popupName, popupWindowAttributes, popup) {\n    return __awaiter(this, void 0, void 0, function () {\n      var serverTelemetryManager, validRequest, authCodeRequest, authClient, navigateUrl, interactionHandler, popupParameters, popupWindow, hash, state, result, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"acquireTokenPopupAsync called\");\n            serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\n            return [4\n            /*yield*/\n            , this.initializeAuthorizationRequest(request, InteractionType.Popup)];\n\n          case 1:\n            validRequest = _a.sent();\n            this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , this.initializeAuthorizationCodeRequest(validRequest)];\n\n          case 3:\n            authCodeRequest = _a.sent();\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions)];\n\n          case 4:\n            authClient = _a.sent();\n            this.logger.verbose(\"Auth code client created\");\n            return [4\n            /*yield*/\n            , authClient.getAuthCodeUrl(validRequest)];\n\n          case 5:\n            navigateUrl = _a.sent();\n            interactionHandler = new PopupHandler(authClient, this.browserStorage, authCodeRequest, this.logger);\n            popupParameters = {\n              popup: popup,\n              popupName: popupName,\n              popupWindowAttributes: popupWindowAttributes\n            };\n            popupWindow = interactionHandler.initiateAuthRequest(navigateUrl, popupParameters);\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {\n              popupWindow: popupWindow\n            }, null);\n            return [4\n            /*yield*/\n            , interactionHandler.monitorPopupForHash(popupWindow)];\n\n          case 6:\n            hash = _a.sent();\n            state = this.validateAndExtractStateFromHash(hash, InteractionType.Popup, validRequest.correlationId); // Remove throttle if it exists\n\n            ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\n            return [4\n            /*yield*/\n            , interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient)];\n\n          case 7:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n\n          case 8:\n            e_1 = _a.sent();\n\n            if (popup) {\n              // Close the synchronous popup if an error is thrown before the window unload event is registered\n              popup.close();\n            }\n\n            if (e_1 instanceof AuthError) {\n              e_1.setCorrelationId(this.correlationId);\n            }\n\n            serverTelemetryManager.cacheFailedRequest(e_1);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e_1;\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param validRequest\r\n   * @param popupName\r\n   * @param requestAuthority\r\n   * @param popup\r\n   * @param mainWindowRedirectUri\r\n   * @param popupWindowAttributes\r\n   */\n\n\n  PopupClient.prototype.logoutPopupAsync = function (validRequest, popupName, popupWindowAttributes, requestAuthority, popup, mainWindowRedirectUri) {\n    return __awaiter(this, void 0, void 0, function () {\n      var serverTelemetryManager, authClient, logoutUri, popupUtils, popupWindow, e_2, navigationOptions, absoluteUrl, e_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"logoutPopupAsync called\");\n            this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\n            serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 8,, 9]); // Clear cache on logout\n\n\n            return [4\n            /*yield*/\n            , this.clearCacheOnLogout(validRequest.account)];\n\n          case 2:\n            // Clear cache on logout\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(serverTelemetryManager, requestAuthority)];\n\n          case 3:\n            authClient = _a.sent();\n            this.logger.verbose(\"Auth code client created\");\n            logoutUri = authClient.getLogoutUri(validRequest);\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n            popupUtils = new PopupUtils(this.browserStorage, this.logger);\n            popupWindow = popupUtils.openPopup(logoutUri, {\n              popupName: popupName,\n              popupWindowAttributes: popupWindowAttributes,\n              popup: popup\n            });\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {\n              popupWindow: popupWindow\n            }, null);\n            _a.label = 4;\n\n          case 4:\n            _a.trys.push([4, 6,, 7]); // Don't care if this throws an error (User Cancelled)\n\n\n            return [4\n            /*yield*/\n            , popupUtils.monitorPopupForSameOrigin(popupWindow)];\n\n          case 5:\n            // Don't care if this throws an error (User Cancelled)\n            _a.sent();\n\n            this.logger.verbose(\"Popup successfully redirected to postLogoutRedirectUri\");\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            e_2 = _a.sent();\n            this.logger.verbose(\"Error occurred while monitoring popup for same origin. Session on server may remain active. Error: \" + e_2);\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            popupUtils.cleanPopup(popupWindow);\n\n            if (mainWindowRedirectUri) {\n              navigationOptions = {\n                apiId: ApiId.logoutPopup,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false\n              };\n              absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\n              this.logger.verbose(\"Redirecting main window to url specified in the request\");\n              this.logger.verbosePii(\"Redirecting main window to: \" + absoluteUrl);\n              this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n            } else {\n              this.logger.verbose(\"No main window navigation requested\");\n            }\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            e_3 = _a.sent();\n\n            if (popup) {\n              // Close the synchronous popup if an error is thrown before the window unload event is registered\n              popup.close();\n            }\n\n            if (e_3 instanceof AuthError) {\n              e_3.setCorrelationId(this.correlationId);\n            }\n\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e_3);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            serverTelemetryManager.cacheFailedRequest(e_3);\n            throw e_3;\n\n          case 9:\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return PopupClient;\n}(StandardInteractionClient);\n\nexport { PopupClient };","map":{"version":3,"sources":["C:/GitHub/Private/Angular_WebApp/node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.js"],"names":["__extends","__awaiter","__generator","OIDC_DEFAULT_SCOPES","AuthError","ThrottlingUtils","Constants","UrlString","StandardInteractionClient","PopupUtils","EventType","InteractionType","ApiId","PopupHandler","BrowserUtils","PopupClient","_super","apply","arguments","prototype","acquireToken","request","popupName","generatePopupName","config","auth","clientId","scopes","authority","correlationId","popupWindowAttributes","system","asyncPopups","logger","verbose","acquireTokenPopupAsync","popup","openSizedPopup","e","Promise","reject","logout","logoutRequest","validLogoutRequest","initializeLogoutRequest","generateLogoutPopupName","mainWindowRedirectUri","logoutPopupAsync","undefined","serverTelemetryManager","validRequest","authCodeRequest","authClient","navigateUrl","interactionHandler","popupParameters","popupWindow","hash","state","result","e_1","_a","label","initializeServerTelemetryManager","acquireTokenPopup","initializeAuthorizationRequest","Popup","sent","browserStorage","updateCacheEntries","nonce","loginHint","EMPTY_STRING","account","trys","push","initializeAuthorizationCodeRequest","createAuthCodeClient","azureCloudOptions","getAuthCodeUrl","initiateAuthRequest","eventHandler","emitEvent","POPUP_OPENED","monitorPopupForHash","validateAndExtractStateFromHash","removeThrottle","handleCodeResponseFromHash","networkClient","close","setCorrelationId","cacheFailedRequest","cleanRequestByState","requestAuthority","logoutUri","popupUtils","e_2","navigationOptions","absoluteUrl","e_3","LOGOUT_START","logoutPopup","clearCacheOnLogout","getLogoutUri","LOGOUT_SUCCESS","openPopup","monitorPopupForSameOrigin","cleanPopup","apiId","timeout","redirectNavigationTimeout","noHistory","getAbsoluteUrl","getCurrentUri","verbosePii","navigationClient","navigateInternal","setInteractionInProgress","LOGOUT_FAILURE","LOGOUT_END"],"mappings":"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","sourcesContent":["/*! @azure/msal-browser v2.23.0 2022-04-04 */\n'use strict';\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { OIDC_DEFAULT_SCOPES, AuthError, ThrottlingUtils, Constants, UrlString } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.js';\nimport { PopupUtils } from '../utils/PopupUtils.js';\nimport { EventType } from '../event/EventType.js';\nimport { InteractionType, ApiId } from '../utils/BrowserConstants.js';\nimport { PopupHandler } from '../interaction_handler/PopupHandler.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar PopupClient = /** @class */ (function (_super) {\r\n    __extends(PopupClient, _super);\r\n    function PopupClient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n     * @param request\r\n     */\r\n    PopupClient.prototype.acquireToken = function (request) {\r\n        try {\r\n            var popupName = PopupUtils.generatePopupName(this.config.auth.clientId, request.scopes || OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority, this.correlationId);\r\n            var popupWindowAttributes = request.popupWindowAttributes || {};\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\r\n                var popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\r\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    PopupClient.prototype.logout = function (logoutRequest) {\r\n        try {\r\n            this.logger.verbose(\"logoutPopup called\");\r\n            var validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n            var popupName = PopupUtils.generateLogoutPopupName(this.config.auth.clientId, validLogoutRequest);\r\n            var authority = logoutRequest && logoutRequest.authority;\r\n            var mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\r\n            var popupWindowAttributes = (logoutRequest === null || logoutRequest === void 0 ? void 0 : logoutRequest.popupWindowAttributes) || {};\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before logging out.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\r\n                var popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\r\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Since this function is synchronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    /**\r\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param popup\r\n     * @param popupWindowAttributes\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    PopupClient.prototype.acquireTokenPopupAsync = function (request, popupName, popupWindowAttributes, popup) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var serverTelemetryManager, validRequest, authCodeRequest, authClient, navigateUrl, interactionHandler, popupParameters, popupWindow, hash, state, result, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"acquireTokenPopupAsync called\");\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\r\n                        return [4 /*yield*/, this.initializeAuthorizationRequest(request, InteractionType.Popup)];\r\n                    case 1:\r\n                        validRequest = _a.sent();\r\n                        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 8, , 9]);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(validRequest)];\r\n                    case 3:\r\n                        authCodeRequest = _a.sent();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions)];\r\n                    case 4:\r\n                        authClient = _a.sent();\r\n                        this.logger.verbose(\"Auth code client created\");\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(validRequest)];\r\n                    case 5:\r\n                        navigateUrl = _a.sent();\r\n                        interactionHandler = new PopupHandler(authClient, this.browserStorage, authCodeRequest, this.logger);\r\n                        popupParameters = {\r\n                            popup: popup,\r\n                            popupName: popupName,\r\n                            popupWindowAttributes: popupWindowAttributes\r\n                        };\r\n                        popupWindow = interactionHandler.initiateAuthRequest(navigateUrl, popupParameters);\r\n                        this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow: popupWindow }, null);\r\n                        return [4 /*yield*/, interactionHandler.monitorPopupForHash(popupWindow)];\r\n                    case 6:\r\n                        hash = _a.sent();\r\n                        state = this.validateAndExtractStateFromHash(hash, InteractionType.Popup, validRequest.correlationId);\r\n                        // Remove throttle if it exists\r\n                        ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\r\n                        return [4 /*yield*/, interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient)];\r\n                    case 7:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                    case 8:\r\n                        e_1 = _a.sent();\r\n                        if (popup) {\r\n                            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n                            popup.close();\r\n                        }\r\n                        if (e_1 instanceof AuthError) {\r\n                            e_1.setCorrelationId(this.correlationId);\r\n                        }\r\n                        serverTelemetryManager.cacheFailedRequest(e_1);\r\n                        this.browserStorage.cleanRequestByState(validRequest.state);\r\n                        throw e_1;\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param requestAuthority\r\n     * @param popup\r\n     * @param mainWindowRedirectUri\r\n     * @param popupWindowAttributes\r\n     */\r\n    PopupClient.prototype.logoutPopupAsync = function (validRequest, popupName, popupWindowAttributes, requestAuthority, popup, mainWindowRedirectUri) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var serverTelemetryManager, authClient, logoutUri, popupUtils, popupWindow, e_2, navigationOptions, absoluteUrl, e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"logoutPopupAsync called\");\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 8, , 9]);\r\n                        // Clear cache on logout\r\n                        return [4 /*yield*/, this.clearCacheOnLogout(validRequest.account)];\r\n                    case 2:\r\n                        // Clear cache on logout\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, requestAuthority)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        this.logger.verbose(\"Auth code client created\");\r\n                        logoutUri = authClient.getLogoutUri(validRequest);\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\r\n                        popupUtils = new PopupUtils(this.browserStorage, this.logger);\r\n                        popupWindow = popupUtils.openPopup(logoutUri, { popupName: popupName, popupWindowAttributes: popupWindowAttributes, popup: popup });\r\n                        this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow: popupWindow }, null);\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        _a.trys.push([4, 6, , 7]);\r\n                        // Don't care if this throws an error (User Cancelled)\r\n                        return [4 /*yield*/, popupUtils.monitorPopupForSameOrigin(popupWindow)];\r\n                    case 5:\r\n                        // Don't care if this throws an error (User Cancelled)\r\n                        _a.sent();\r\n                        this.logger.verbose(\"Popup successfully redirected to postLogoutRedirectUri\");\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_2 = _a.sent();\r\n                        this.logger.verbose(\"Error occurred while monitoring popup for same origin. Session on server may remain active. Error: \" + e_2);\r\n                        return [3 /*break*/, 7];\r\n                    case 7:\r\n                        popupUtils.cleanPopup(popupWindow);\r\n                        if (mainWindowRedirectUri) {\r\n                            navigationOptions = {\r\n                                apiId: ApiId.logoutPopup,\r\n                                timeout: this.config.system.redirectNavigationTimeout,\r\n                                noHistory: false\r\n                            };\r\n                            absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\r\n                            this.logger.verbose(\"Redirecting main window to url specified in the request\");\r\n                            this.logger.verbosePii(\"Redirecting main window to: \" + absoluteUrl);\r\n                            this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\r\n                        }\r\n                        else {\r\n                            this.logger.verbose(\"No main window navigation requested\");\r\n                        }\r\n                        return [3 /*break*/, 9];\r\n                    case 8:\r\n                        e_3 = _a.sent();\r\n                        if (popup) {\r\n                            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n                            popup.close();\r\n                        }\r\n                        if (e_3 instanceof AuthError) {\r\n                            e_3.setCorrelationId(this.correlationId);\r\n                        }\r\n                        this.browserStorage.setInteractionInProgress(false);\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e_3);\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\r\n                        serverTelemetryManager.cacheFailedRequest(e_3);\r\n                        throw e_3;\r\n                    case 9:\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return PopupClient;\r\n}(StandardInteractionClient));\n\nexport { PopupClient };\n"]},"metadata":{},"sourceType":"module"}