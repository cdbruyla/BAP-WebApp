{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\GitHub\\\\Private\\\\Angular_WebApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy, HttpHeaders, isNode } from \"@azure/core-http\";\nimport { HeaderConstants } from \"../utils/constants\";\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n */\n\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param nextPolicy -\n   * @param options -\n   * @param telemetry -\n   */\n  constructor(nextPolicy, options, telemetry) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n\n\n  sendRequest(request) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (isNode) {\n        if (!request.headers) {\n          request.headers = new HttpHeaders();\n        }\n\n        if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n          request.headers.set(HeaderConstants.USER_AGENT, _this.telemetry);\n        }\n      }\n\n      return _this._nextPolicy.sendRequest(request);\n    })();\n  }\n\n} //# sourceMappingURL=TelemetryPolicy.js.map","map":null,"metadata":{},"sourceType":"module"}