{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\GitHub\\\\Private\\\\Angular_WebApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy, isNode } from \"@azure/core-http\";\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n */\n\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of StorageBrowserPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy, options) {\n    super(nextPolicy, options);\n  }\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n\n\n  sendRequest(request) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (isNode) {\n        return _this._nextPolicy.sendRequest(request);\n      }\n\n      if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n        request.url = setURLParameter(request.url, URLConstants.Parameters.FORCE_BROWSER_NO_CACHE, new Date().getTime().toString());\n      }\n\n      request.headers.remove(HeaderConstants.COOKIE); // According to XHR standards, content-length should be fully controlled by browsers\n\n      request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n      return _this._nextPolicy.sendRequest(request);\n    })();\n  }\n\n} //# sourceMappingURL=StorageBrowserPolicy.js.map","map":null,"metadata":{},"sourceType":"module"}