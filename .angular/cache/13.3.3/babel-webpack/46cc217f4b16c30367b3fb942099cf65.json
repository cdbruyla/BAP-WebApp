{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\GitHub\\\\Private\\\\Angular_WebApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { failureStates, successStates } from \"./models\";\nimport { isUnexpectedPollingResponse } from \"./requestUtils\";\n\nfunction isPollingDone(rawResponse) {\n  var _a;\n\n  if (isUnexpectedPollingResponse(rawResponse) || rawResponse.statusCode === 202) {\n    return false;\n  }\n\n  const {\n    status\n  } = (_a = rawResponse.body) !== null && _a !== void 0 ? _a : {};\n  const state = typeof status === \"string\" ? status.toLowerCase() : \"succeeded\";\n\n  if (isUnexpectedPollingResponse(rawResponse) || failureStates.includes(state)) {\n    throw new Error(`The long running operation has failed. The provisioning state: ${state}.`);\n  }\n\n  return successStates.includes(state);\n}\n/**\n * Sends a request to the URI of the provisioned resource if needed.\n */\n\n\nfunction sendFinalRequest(_x, _x2, _x3) {\n  return _sendFinalRequest.apply(this, arguments);\n}\n\nfunction _sendFinalRequest() {\n  _sendFinalRequest = _asyncToGenerator(function* (lro, resourceLocation, lroResourceLocationConfig) {\n    switch (lroResourceLocationConfig) {\n      case \"original-uri\":\n        return lro.sendPollRequest(lro.requestPath);\n\n      case \"azure-async-operation\":\n        return undefined;\n\n      case \"location\":\n      default:\n        return lro.sendPollRequest(resourceLocation !== null && resourceLocation !== void 0 ? resourceLocation : lro.requestPath);\n    }\n  });\n  return _sendFinalRequest.apply(this, arguments);\n}\n\nexport function processLocationPollingOperationResult(lro, resourceLocation, lroResourceLocationConfig) {\n  return response => {\n    if (isPollingDone(response.rawResponse)) {\n      if (resourceLocation === undefined) {\n        return Object.assign(Object.assign({}, response), {\n          done: true\n        });\n      } else {\n        return Object.assign(Object.assign({}, response), {\n          done: false,\n          next: function () {\n            var _ref = _asyncToGenerator(function* () {\n              const finalResponse = yield sendFinalRequest(lro, resourceLocation, lroResourceLocationConfig);\n              return Object.assign(Object.assign({}, finalResponse !== null && finalResponse !== void 0 ? finalResponse : response), {\n                done: true\n              });\n            });\n\n            return function next() {\n              return _ref.apply(this, arguments);\n            };\n          }()\n        });\n      }\n    }\n\n    return Object.assign(Object.assign({}, response), {\n      done: false\n    });\n  };\n} //# sourceMappingURL=locationPolling.js.map","map":null,"metadata":{},"sourceType":"module"}