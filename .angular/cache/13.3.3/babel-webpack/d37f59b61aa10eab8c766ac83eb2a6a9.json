{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\GitHub\\\\Private\\\\Angular_WebApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\n/**\n * By default, HTTP connections are maintained for future requests.\n */\n\nexport const DefaultKeepAliveOptions = {\n  enable: true\n};\n/**\n * Creates a policy that controls whether HTTP connections are maintained on future requests.\n * @param keepAliveOptions - Keep alive options. By default, HTTP connections are maintained for future requests.\n * @returns An instance of the {@link KeepAlivePolicy}\n */\n\nexport function keepAlivePolicy(keepAliveOptions) {\n  return {\n    create: (nextPolicy, options) => {\n      return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n    }\n  };\n}\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\n\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param keepAliveOptions -\n   */\n  constructor(nextPolicy, options, keepAliveOptions) {\n    super(nextPolicy, options);\n    this.keepAliveOptions = keepAliveOptions;\n  }\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   * @returns\n   */\n\n\n  sendRequest(request) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      request.keepAlive = _this.keepAliveOptions.enable;\n      return _this._nextPolicy.sendRequest(request);\n    })();\n  }\n\n} //# sourceMappingURL=keepAlivePolicy.js.map","map":null,"metadata":{},"sourceType":"module"}