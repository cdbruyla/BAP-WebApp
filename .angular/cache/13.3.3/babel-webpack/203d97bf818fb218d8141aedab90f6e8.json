{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createHttpHeaders } from \"./httpHeaders\";\nimport { generateUuid } from \"./util/uuid\";\n\nclass PipelineRequestImpl {\n  constructor(options) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    this.url = options.url;\n    this.body = options.body;\n    this.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : createHttpHeaders();\n    this.method = (_b = options.method) !== null && _b !== void 0 ? _b : \"GET\";\n    this.timeout = (_c = options.timeout) !== null && _c !== void 0 ? _c : 0;\n    this.formData = options.formData;\n    this.disableKeepAlive = (_d = options.disableKeepAlive) !== null && _d !== void 0 ? _d : false;\n    this.proxySettings = options.proxySettings;\n    this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n    this.withCredentials = (_e = options.withCredentials) !== null && _e !== void 0 ? _e : false;\n    this.abortSignal = options.abortSignal;\n    this.tracingOptions = options.tracingOptions;\n    this.onUploadProgress = options.onUploadProgress;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.requestId = options.requestId || generateUuid();\n    this.allowInsecureConnection = (_f = options.allowInsecureConnection) !== null && _f !== void 0 ? _f : false;\n    this.enableBrowserStreams = (_g = options.enableBrowserStreams) !== null && _g !== void 0 ? _g : false;\n  }\n\n}\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\n\n\nexport function createPipelineRequest(options) {\n  return new PipelineRequestImpl(options);\n} //# sourceMappingURL=pipelineRequest.js.map","map":null,"metadata":{},"sourceType":"module"}