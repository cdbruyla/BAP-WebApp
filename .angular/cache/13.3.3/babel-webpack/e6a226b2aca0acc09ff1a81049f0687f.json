{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isObjectWithProperties } from \"./typeguards\";\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\n\nexport class AzureSASCredential {\n  /**\n   * Create an instance of an AzureSASCredential for use\n   * with a service client.\n   *\n   * @param signature - The initial value of the shared access signature to use in authentication\n   */\n  constructor(signature) {\n    if (!signature) {\n      throw new Error(\"shared access signature must be a non-empty string\");\n    }\n\n    this._signature = signature;\n  }\n  /**\n   * The value of the shared access signature to be used in authentication\n   */\n\n\n  get signature() {\n    return this._signature;\n  }\n  /**\n   * Change the value of the signature.\n   *\n   * Updates will take effect upon the next request after\n   * updating the signature value.\n   *\n   * @param newSignature - The new shared access signature value to be used\n   */\n\n\n  update(newSignature) {\n    if (!newSignature) {\n      throw new Error(\"shared access signature must be a non-empty string\");\n    }\n\n    this._signature = newSignature;\n  }\n\n}\n/**\n * Tests an object to determine whether it implements SASCredential.\n *\n * @param credential - The assumed SASCredential to be tested.\n */\n\nexport function isSASCredential(credential) {\n  return isObjectWithProperties(credential, [\"signature\"]) && typeof credential.signature === \"string\";\n} //# sourceMappingURL=azureSASCredential.js.map","map":null,"metadata":{},"sourceType":"module"}