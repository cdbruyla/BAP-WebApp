{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { EncryptionAlgorithmAES25 } from \"./utils/constants\";\n/**\n * Represents the access tier on a blob.\n * For detailed information about block blob level tiering see {@link https://docs.microsoft.com/azure/storage/blobs/storage-blob-storage-tiers|Hot, cool and archive storage tiers.}\n */\n\nexport var BlockBlobTier = /*#__PURE__*/(() => {\n  (function (BlockBlobTier) {\n    /**\n     * Optimized for storing data that is accessed frequently.\n     */\n    BlockBlobTier[\"Hot\"] = \"Hot\";\n    /**\n     * Optimized for storing data that is infrequently accessed and stored for at least 30 days.\n     */\n\n    BlockBlobTier[\"Cool\"] = \"Cool\";\n    /**\n     * Optimized for storing data that is rarely accessed and stored for at least 180 days\n     * with flexible latency requirements (on the order of hours).\n     */\n\n    BlockBlobTier[\"Archive\"] = \"Archive\";\n  })(BlockBlobTier || (BlockBlobTier = {}));\n\n  return BlockBlobTier;\n})();\n\n/**\n * Specifies the page blob tier to set the blob to. This is only applicable to page blobs on premium storage accounts.\n * Please see {@link https://docs.microsoft.com/azure/storage/storage-premium-storage#scalability-and-performance-targets|here}\n * for detailed information on the corresponding IOPS and throughput per PageBlobTier.\n */\nexport var PremiumPageBlobTier = /*#__PURE__*/(() => {\n  (function (PremiumPageBlobTier) {\n    /**\n     * P4 Tier.\n     */\n    PremiumPageBlobTier[\"P4\"] = \"P4\";\n    /**\n     * P6 Tier.\n     */\n\n    PremiumPageBlobTier[\"P6\"] = \"P6\";\n    /**\n     * P10 Tier.\n     */\n\n    PremiumPageBlobTier[\"P10\"] = \"P10\";\n    /**\n     * P15 Tier.\n     */\n\n    PremiumPageBlobTier[\"P15\"] = \"P15\";\n    /**\n     * P20 Tier.\n     */\n\n    PremiumPageBlobTier[\"P20\"] = \"P20\";\n    /**\n     * P30 Tier.\n     */\n\n    PremiumPageBlobTier[\"P30\"] = \"P30\";\n    /**\n     * P40 Tier.\n     */\n\n    PremiumPageBlobTier[\"P40\"] = \"P40\";\n    /**\n     * P50 Tier.\n     */\n\n    PremiumPageBlobTier[\"P50\"] = \"P50\";\n    /**\n     * P60 Tier.\n     */\n\n    PremiumPageBlobTier[\"P60\"] = \"P60\";\n    /**\n     * P70 Tier.\n     */\n\n    PremiumPageBlobTier[\"P70\"] = \"P70\";\n    /**\n     * P80 Tier.\n     */\n\n    PremiumPageBlobTier[\"P80\"] = \"P80\";\n  })(PremiumPageBlobTier || (PremiumPageBlobTier = {}));\n\n  return PremiumPageBlobTier;\n})();\nexport function toAccessTier(tier) {\n  if (tier === undefined) {\n    return undefined;\n  }\n\n  return tier; // No more check if string is a valid AccessTier, and left this to underlay logic to decide(service).\n}\nexport function ensureCpkIfSpecified(cpk, isHttps) {\n  if (cpk && !isHttps) {\n    throw new RangeError(\"Customer-provided encryption key must be used over HTTPS.\");\n  }\n\n  if (cpk && !cpk.encryptionAlgorithm) {\n    cpk.encryptionAlgorithm = EncryptionAlgorithmAES25;\n  }\n}\n/**\n * Defines the known cloud audiences for Storage.\n */\n\nexport var StorageBlobAudience = /*#__PURE__*/(() => {\n  (function (StorageBlobAudience) {\n    /**\n     * The OAuth scope to use to retrieve an AAD token for Azure Storage.\n     */\n    StorageBlobAudience[\"StorageOAuthScopes\"] = \"https://storage.azure.com/.default\";\n    /**\n     * The OAuth scope to use to retrieve an AAD token for Azure Disk.\n     */\n\n    StorageBlobAudience[\"DiskComputeOAuthScopes\"] = \"https://disk.compute.azure.com/.default\";\n  })(StorageBlobAudience || (StorageBlobAudience = {}));\n\n  return StorageBlobAudience;\n})(); //# sourceMappingURL=models.js.map","map":null,"metadata":{},"sourceType":"module"}