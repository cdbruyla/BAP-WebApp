{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\GitHub\\\\Private\\\\Angular_WebApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n/**\n * A policy that encodes FormData on the request into the body.\n */\n\nexport function formDataPolicy() {\n  return {\n    name: formDataPolicyName,\n\n    sendRequest(request, next) {\n      return _asyncToGenerator(function* () {\n        if (request.formData) {\n          const formData = request.formData;\n          const requestForm = new FormData();\n\n          for (const formKey of Object.keys(formData)) {\n            const formValue = formData[formKey];\n\n            if (Array.isArray(formValue)) {\n              for (const subValue of formValue) {\n                requestForm.append(formKey, subValue);\n              }\n            } else {\n              requestForm.append(formKey, formValue);\n            }\n          }\n\n          request.body = requestForm;\n          request.formData = undefined;\n          const contentType = request.headers.get(\"Content-Type\");\n\n          if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n            request.body = new URLSearchParams(requestForm).toString();\n          } else if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n            // browser will automatically apply a suitable content-type header\n            request.headers.delete(\"Content-Type\");\n          }\n        }\n\n        return next(request);\n      })();\n    }\n\n  };\n} //# sourceMappingURL=formDataPolicy.browser.js.map","map":null,"metadata":{},"sourceType":"module"}