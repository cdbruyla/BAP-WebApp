{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\GitHub\\\\Private\\\\Angular_WebApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __asyncValues } from \"tslib\";\nimport { BlobServiceClient } from '@azure/storage-blob';\nimport * as i0 from \"@angular/core\";\nexport let BlobInService = /*#__PURE__*/(() => {\n  class BlobInService {\n    constructor() {\n      this.storageAccount = \"storagebap\";\n      this.storageContainer = \"bap-storage-container\";\n    }\n\n    listBlobs() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var e_1, _a;\n\n        let result = [];\n\n        let blobs = _this.containerClient().listBlobsFlat();\n\n        try {\n          for (var blobs_1 = __asyncValues(blobs), blobs_1_1; blobs_1_1 = yield blobs_1.next(), !blobs_1_1.done;) {\n            const blob = blobs_1_1.value;\n            result.push(blob.name);\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (blobs_1_1 && !blobs_1_1.done && (_a = blobs_1.return)) yield _a.call(blobs_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n\n        return result;\n      })();\n    }\n\n    uploadBlob(content, name, client, handler) {\n      let blockBlobClient = client.getBlockBlobClient(name);\n      blockBlobClient.uploadData(content, {\n        blobHTTPHeaders: {\n          blobContentType: content.type\n        }\n      }).then(() => handler());\n    }\n\n    containerClient() {\n      return new BlobServiceClient(`https://${this.storageAccount}.blob.core.windows.net?`).getContainerClient(this.storageContainer);\n    }\n\n  }\n\n  BlobInService.ɵfac = function BlobInService_Factory(t) {\n    return new (t || BlobInService)();\n  };\n\n  BlobInService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlobInService,\n    factory: BlobInService.ɵfac,\n    providedIn: 'root'\n  });\n  return BlobInService;\n})();","map":null,"metadata":{},"sourceType":"module"}