{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createEmptyPipeline } from \"./pipeline\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy\";\nimport { formDataPolicy } from \"./policies/formDataPolicy\";\nimport { logPolicy } from \"./policies/logPolicy\";\nimport { proxyPolicy } from \"./policies/proxyPolicy\";\nimport { redirectPolicy } from \"./policies/redirectPolicy\";\nimport { setClientRequestIdPolicy } from \"./policies/setClientRequestIdPolicy\";\nimport { tracingPolicy } from \"./policies/tracingPolicy\";\nimport { userAgentPolicy } from \"./policies/userAgentPolicy\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy\";\nimport { isNode } from \"./util/helpers\";\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\n\nexport function createPipelineFromOptions(options) {\n  const pipeline = createEmptyPipeline();\n\n  if (isNode) {\n    pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n    pipeline.addPolicy(decompressResponsePolicy());\n  }\n\n  pipeline.addPolicy(formDataPolicy());\n  pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n  pipeline.addPolicy(setClientRequestIdPolicy());\n  pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), {\n    phase: \"Retry\"\n  });\n  pipeline.addPolicy(tracingPolicy(options.userAgentOptions), {\n    afterPhase: \"Retry\"\n  });\n\n  if (isNode) {\n    // Both XHR and Fetch expect to handle redirects automatically,\n    // so only include this policy when we're in Node.\n    pipeline.addPolicy(redirectPolicy(options.redirectOptions), {\n      afterPhase: \"Retry\"\n    });\n  }\n\n  pipeline.addPolicy(logPolicy(options.loggingOptions), {\n    afterPhase: \"Retry\"\n  });\n  return pipeline;\n} //# sourceMappingURL=createPipelineFromOptions.js.map","map":null,"metadata":{},"sourceType":"module"}