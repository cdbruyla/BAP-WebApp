{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\GitHub\\\\Private\\\\Angular_WebApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Convert a Browser Blob object into ArrayBuffer.\n *\n * @param blob -\n */\nexport function blobToArrayBuffer(_x) {\n  return _blobToArrayBuffer.apply(this, arguments);\n}\n/**\n * Convert a Browser Blob object into string.\n *\n * @param blob -\n */\n\nfunction _blobToArrayBuffer() {\n  _blobToArrayBuffer = _asyncToGenerator(function* (blob) {\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n      fileReader.onloadend = ev => {\n        resolve(ev.target.result);\n      };\n\n      fileReader.onerror = reject;\n      fileReader.readAsArrayBuffer(blob);\n    });\n  });\n  return _blobToArrayBuffer.apply(this, arguments);\n}\n\nexport function blobToString(_x2) {\n  return _blobToString.apply(this, arguments);\n}\n\nfunction _blobToString() {\n  _blobToString = _asyncToGenerator(function* (blob) {\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n      fileReader.onloadend = ev => {\n        resolve(ev.target.result);\n      };\n\n      fileReader.onerror = reject;\n      fileReader.readAsText(blob);\n    });\n  });\n  return _blobToString.apply(this, arguments);\n}\n\nexport function streamToBuffer() {\n  /* empty */\n}\nexport function streamToBuffer2() {\n  /* empty */\n}\nexport function readStreamToLocalFile() {\n  /* empty */\n}\nexport const fsStat = function stat() {\n  /* empty */\n};\nexport const fsCreateReadStream = function createReadStream() {\n  /* empty */\n}; //# sourceMappingURL=utils.browser.js.map","map":null,"metadata":{},"sourceType":"module"}